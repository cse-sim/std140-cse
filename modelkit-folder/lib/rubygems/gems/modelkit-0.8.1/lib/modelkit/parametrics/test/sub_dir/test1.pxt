<%#INTERFACE
puts "in interface"
puts "still need to handle exceptions in interface"

%>

<%
puts "in body"


# ScriptError subclasses (includes LoadError, NotImplementedError, SyntaxError)

#require "badpath"  # => LoadError, no line echo, no caret

#raise NotImplementedError, "gotcha"  # => NotImplementedError, no line echo, no caret


#1 = 2  # => SyntaxError, has line echo and caret line

#3x  # => SyntaxError (unexpected tIDENTIFIER, expecting end-of-input) !! NO LINE ECHO, NO CARET


#format()  # => ArgumentError

#exit  # exiting now!


#insert("badpath")  # => ERROR:  Could not resolve path 'badpath' from possible paths:
# needs better error message that looks like an exception and line echo!
# a stack trace of the template callers would be nice too.


#SyntaxError at line 20 : syntax error, unexpected tIDENTIFIER, expecting end-of-input
#"unterminated string



### StandardError subclasses (includes NameError)

#3 + x  # => NameError (x is undefined)




#puts "__dir__ = #{__dir__}"
#puts "__FILE__ = #{__FILE__}"

#puts "$LOAD_PATH = "
#$LOAD_PATH.first(3).each { |path| puts path }
#puts "...more..."

# When things fail, should give a good error message:
#LoadError at line 16 in 'require': cannot load such file -- top_file
#require "top_file"  # fails, as it should
#error: exit


#require "top_file"  # fails, as it should
#require "sub_file"  # FAILS now, as it should  was: [WORKS, but should fail] - template's dir is getting added to load path

#require "./top_file"  # works, because local to current working dir
#require "../parent_file"  # works, because local to current working dir

#require_relative "sub_file"  # works again  [FAILS now  was: [works, as it should]]
#require_relative "../top_file"  # works, must be relative to the file/template path
#require_relative "../parent_file"  # fails as it should

#load "top_file.rb"  # works, because load also searches current working directory
#load "sub_file.rb"  # fails now, as it should  was [works??? should it? ]  only because sub_dir is added to $LOAD_PATH

#"unterminated string

# missing an `end`
#if true
  # do nothing
#else

%>

<%  #   1 = 2   # works correctly even with ERB delimiters and extra spaces %>

CONTENT!
